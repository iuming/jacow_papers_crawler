














ICALEPCS2019 - Table of Session: WEDPR (User Interfaces, User Perspective, and User Experience (UX) 2)


WEDPR —  User Interfaces, User Perspective, and User Experience (UX) 2   (09-Oct-19   16:30—17:30)
Chair: N. Kamikubota, KEK, Ibaraki, Japan


Paper
Title
Page



WEDPR01
Cumbia: Graphical Libraries and Formula Plugin to Combine and Display Data from Tango, EPICS and More
971


 

G. Strangolino
                       Elettra-Sincrotrone Trieste S.C.p.A., Basovizza, Italy

 


 

Cumbia libraries offer the next generation core (C++) and graphical (Qt) software to write complete and lightweight applications that provide a unified user interface, regardless of the underlying engine (Tango, EPICS, WebSocket, …) With the new formula plugin, results can be manipulated and combined by JavaScript functions and displayed in the appropriate widget. Qt has a deep JavaScript integration that allows efficient introduction of program logic into the application. Using the Qt + QML technologies, apps can be designed for the desktop and mobile devices. Switching between the two targets is an immediate operation. A WebSocket based service* has been used to test Qt + QML mobile applications on portable devices. It makes it possible to connect to Tango and EPICS without their installation. A new tool called "la-cumparsita" lets non-programmers use the Qt designer to realize complete applications ready to communicate with the control system in use: Tango, EPICS or any other abstraction framework (e.g. WebSocket). These apps seamlessly integrate with the desktop. Most demanding users can integrate JavaScript functions and use them as data sources for the GUI elements.
*The "canoned" service. It is part of the PWMA project (GPL3 LICENSE) and exposes a WebSocket interface.

 






Slides WEDPR01 [2.933 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-WEDPR01

 


About •
paper received ※ 30 September 2019       paper accepted ※ 09 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



WEDPR02
Benefits of Low Code Development Environments on Large Scale Control Systems
976


 

B. Lefort, V. Costa
                       CERN, Meyrin, Switzerland

 


 

The rapid evolution of science and of scientific projects usually implies high levels of mobility among researchers, engineers and applied scientists. In parallel, software development has been getting easier and easier as computing technology has evolved. One direct consequence of these two paradigms is a proliferation of small software that becomes vulnerable in many ways, when the person who develops and maintains it departs. Inspector is a low-code development platform to design control interfaces. It features a visual interface composer, a visual programming language and supports Python. More than 600 Inspector applications are used at CERN. We will explain how people with little experience of writing software can develop applications that they could not otherwise explicitly code for themselves. Finally, we will demonstrate how it offers the organization enhanced security and higher productivity, as well as relieving the load on IT for bug fixes and non-compliance.

 






Slides WEDPR02 [6.300 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-WEDPR02

 


About •
paper received ※ 26 September 2019       paper accepted ※ 20 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



WEDPR03
Synoptic GUIs in NSRC SOLARIS for Beamlines and Accelerators Visualization and Control
982


 

M.K. Falowski, T.R. Noga, N. Olszowska, M. Zając
                       NSRC SOLARIS, Kraków, Poland

 


 

High demand from scientists and operators to create new, clear and intuitive SCADA graphical interfaces for new beamlines and replace or supplement existing beamlines’ and accelerators’ graphical user interfaces is a challenging task. This is not only time consuming but very often requirements from users vary, change quickly and even sometimes they are mutually exclusive. To meet this challenge and provide clear, scalable and ergonomic graphical user interfaces, SOLARIS chose ’Taurus’ and ’svgsynoptic2’ to create synoptic applications which allow to visualize and control beamlines and accelerators with ease. In addition, it was decided to use identical scheme of visualization and control for synoptic applications on all beamlines, so scientists can get used to it, even if they carry out research on different beamlines. This paper presents the overall architecture and functionality of the applications.

 






Slides WEDPR03 [22.442 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-WEDPR03

 


About •
paper received ※ 30 September 2019       paper accepted ※ 09 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



WEDPR04
The Web as the Primary Control System User Interface
987


 

R. Neswold, B.F. Harrison
                       Fermilab, Batavia, Illinois, USA

 


 

The application framework used in Fermilab’s Control System is proprietary and was written decades ago. Considered state-of-the-art at one time, it now lacks many features we expect from a modern interface and needs to be replaced. Our investigation of Web browsers and JavaScript revealed a powerful, rich, and state-of-the-art development environment. We discuss JavaScript frameworks, JavaScript language features, and packaging tools. We also discuss issues we need to resolve before we are confident this can become our primary application platform.

 






Slides WEDPR04 [0.975 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-WEDPR04

 


About •
paper received ※ 01 October 2019       paper accepted ※ 02 October 2020        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 




