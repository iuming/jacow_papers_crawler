














ICALEPCS2019 - Table of Session: TUCPR (User Interface, User Perspective, and User Experience (UX) 1)


TUCPR —  User Interface, User Perspective, and User Experience (UX) 1   (08-Oct-19   14:15—16:00)
Chair: R. Bacher, DESY, Hamburg, Germany


Paper
Title
Page



TUCPR01
Developing a Toolkit for Analysis of LCLS Pump-Probe Data
795


 

S. Nelson
                       SLAC, Menlo Park, California, USA

 


 

Funding: This work was performed in support of the LCLS project at SLAC supported by the U.S. Department of Energy, Office of Science, Office of Basic Energy Sciences, under Contract No. DE-AC02-76SF00515
The data format and volume at LCLS requires significant computing expertise which not all user groups can provide. We will describe the path to and current status of a Python module that enables user groups to translate and reduce their data into a format that they can easily work with. The package is developed in Python and uses the standard LCLS data analysis framework. It encapsulates knowledge of the standard beam line components and adds convenient ways to reduce the data of larger detectors. Both an event-based (best for small event sizes) and a binned approach which is able to handle larger data as megapixel size detectors are simple to setup. MPI is used for fast turn around, enabling close to real time feedback necessary to make decisions of how to use the limited amount of beam time. Jupyter notebooks are provided to demonstrate some of the available options and can serve as a convenient quick start for fast turn around analysis.

 






Slides TUCPR01 [4.088 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR01

 


About •
paper received ※ 07 October 2019       paper accepted ※ 03 November 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



TUCPR02
Data Exploration and Analysis with Jupyter Notebooks
799


 

H. Fangohr, M. Beg, M. Bergemann, V. Bondar, S. Brockhauser, C. Carinan, R. Costa, F. Dall’Antonia, C. Danilevski, J.C. E, W. Ehsan, S.G. Esenov, R. Fabbri, S. Fangohr, G. Flucke, C. Fortmann-Grote, D. Fulla Marsa, G. Giovanetti, D. Goeries, S. Hauf, D.G. Hickin, T. Jarosiewicz, E. Kamil, M. Karnevskiy, Y. Kirienko, A. Klimovskaia, T.A. Kluyver, M. Kuster, L. Le Guyader, A. Madsen, L.G. Maia, D. Mamchyk, L. Mercadier, T. Michelat, J. Möller, I. Mohacsi, A. Parenti, M. Reiser, R. Rosca, D.B. Rück, T. Rüter, H. Santos, R. Schaffer, A. Scherz, M. Scholz, A. Silenzi, M. Spirzewski, J. Sztuk, J. Szuba, S. Trojanowski, K. Wrona, A.A. Yaroslavtsev, J. Zhu
                       EuXFEL, Schenefeld, Germany
S. Brockhauser
                       BRC, Szeged, Hungary
A. Campbell, A. Götz, J. Kieffer
                       ESRF, Grenoble, France
H. Fangohr
                       University of Southampton, Southampton, United Kingdom
E. Fernandez-del-Castillo, G. Sipos
                       The EGI Foundation, Amsterdam, The Netherlands
J. Hall, E. Pellegrini, J.F. Perrin
                       ILL, Grenoble, France
T. Holm Rod, J.R. Selknaes, J.W. Taylor
                       ESS, Copenhagen, Denmark
J. Reppin, F. Schlünzen, M. Schuh
                       DESY, Hamburg, Germany

 


 

Funding: With support from EU’s H{2}020 grants 823852 (PaNOSC) and #676541 (OpenDreamKit), the Gordon and Betty Moore Foundation GBMF #4856, the EPSRC’s CDT (EP/L015382/1) and program grant (EP/N032128/1).
Jupyter notebooks are executable documents that are displayed in a web browser. The notebook elements consist of human-authored contextual elements and computer code, and computer-generated output from executing the computer code. Such outputs can include tables and plots. The notebook elements can be executed interactively, and the whole notebook can be saved, re-loaded and re-executed, or converted to read-only formats such as HTML, LaTeX and PDF. Exploiting these characteristics, Jupyter notebooks can be used to improve the effectiveness of computational and data exploration, documentation, communication, reproducibility and re-usability of scientific research results. They also serve as building blocks of remote data access and analysis as is required for facilities hosting large data sets and initiatives such as the European Open Science Cloud (EOSC). In this contribution we report from our experience of using Jupyter notebooks for data analysis at research facilities, and outline opportunities and future plans.

 






Slides TUCPR02 [15.943 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR02

 


About •
paper received ※ 24 September 2019       paper accepted ※ 20 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



TUCPR03
Our Journey from Java to PyQt and Web for CERN Accelerator Control GUIs
807


 

I. Sinkarenko, V. Baggiolini, S. Zanzottera
                       CERN, Geneva, Switzerland

 


 

For more than 15 years, operational GUIs for accelerator controls and some lab applications for equipment experts have been developed in Java, first with Swing and more recently with JavaFX. In March 2018, Oracle announced that Java GUIs were not part of their strategy anymore*. They will not ship JavaFX after Java 8 and there are hints that they would like to get rid of Swing as well. This was a wakeup call for us. We took the opportunity to reconsider all technical options for developing operational GUIs. Our options ranged from sticking with JavaFX, over using the Qt framework (either using PyQt or developing our own Java Bindings to Qt), to using Web technology both in a browser and in native desktop applications. This article explains the reasons for moving away from Java as the main GUI technology and describes the analysis and hands-on evaluations that we went through before choosing the replacement.
*"Java Client Roadmap Update", Oracle White Paper, March 2018, https://www.oracle.com/technetwork/java/javase/javaclientroadmapupdate2018mar-4414431.pdf

 






Slides TUCPR03 [6.911 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR03

 


About •
paper received ※ 30 September 2019       paper accepted ※ 09 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



TUCPR04
Improving User Experience in Complex Systems
812


 

M.J. Clarke, G.C. Murphy, R. Nørager, T.S. Richter
                       ESS, Copenhagen, Denmark

 


 

Don Norman and Jakob Nielsen* define User Experience (UX) as "encompassing all aspects of the end-user’s interaction with the company, its services, and its products". The question is, however, is it possible to provide a significantly better UX in an inherently complex environment, such as at a neutron beamline instrument? With this in mind, we decided to ask the professionals at Design Psykology** to see what might be achievable for user-facing scientific software at the ESS. During a series of short workshops, we looked at general UX principles and how they could be applied to two of our user-facing software projects. We learned a number of useful practices and ideas, such as: why UX is more than just the graphical user interface; the value of creating user personas and mapping their workflow; How to design for the user’s "System 1". A bad UX may make the user feel like they are fighting against the system rather than working with it. A good UX, however, will unobtrusively help them do what they need to do without fuss or bother. If done well, UX is not a zero-sum game: improvements can be made so novices and experts alike can work more efficiently.
*https://www.nngroup.com/articles/definition-user-experience/ **https://www.designpsykologi.dk/

 






Slides TUCPR04 [9.925 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR04

 


About •
paper received ※ 30 September 2019       paper accepted ※ 09 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



TUCPR05
UX Focused Development Work During Recent ORNL EPICS-Based Instrument Control System Upgrade Projects
818


 

X. Yao, R.D. Gregory, G.S. Guyotte, S.M. Hartman, K.-U. Kasemir, C.A. Lionberger, M.R. Pearson
                       ORNL, Oak Ridge, Tennessee, USA

 


 

Funding: Oak Ridge National Laboratory is managed by UT-Battelle LLC for the US Department of Energy
The importance of usability and easy-to-use user interfaces (UI) have been recognized across many domains. However, the user-friendliness of scientific experiment control systems often lags behind industry standards in the flourishing user experience (UX) field. Scientific control systems can certainly benefit from these new UX research methods and approaches. Recent instrument control system upgrade projects at the SNS and HFIR facilities at Oak Ridge National Laboratory demonstrate the effectiveness of UX focused development work, and further reveal the need for more utilization of such techniques coming from the UX field. The ongoing control system upgrades are targeting the key facility-level priority of higher scientific productivity, and UX is one of the important tools to help us achieve this priority. We will highlight research methods and practices, introduce our findings and deliverables, and share challenges and lessons learned in applying UX methods to scientific control systems.

 






Slides TUCPR05 [7.242 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR05

 


About •
paper received ※ 03 October 2019       paper accepted ※ 10 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



TUCPR06
Fast Interactive Python-based Analysis of Streamed Images
824


 

A. Sukhanov, W. Fu, J.P. Jamilkowski, R.H. Olsen
                       BNL, Upton, New York, USA

 


 

Funding: Work supported by Brookhaven Science Associates, LLC under Contract No. DE-SC0012704 with the U.S. Department of Energy.
This paper reports on development of a general purpose image analysis application, tailored for beam profile monitor cameras of RHIC Collider-Accelerator complex. ImageViewer is pure Python application, based on PyQtGraph and SciPy packages. It accepts image stream from a RHIC image manager (optionally from an EPICS areaDetector driver, or from the file system). The standard analysis includes recognition of connected objects; for each object the parameters of a fitted ellipsoid (position, axes and tilt angle) are calculated using 2nd-order image moments, the parameters then corrected using gaussian fit of the object and a surrounding background. Other features supported: saving, image rotation, region of interest, projections, subtraction of a reference image, multi-frame averaging, pixel to millimeter calibration. Playback feature allows for fast browsing and cleanup of the saved images. User add-ons can be added dynamically as included modules. Each camera of the RHIC complex is equipped with a server (grahic-less) version of this application, providing the same analysis and publishing calculated parameters to RHIC Controls Architecture.

 






Slides TUCPR06 [0.908 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR06

 


About •
paper received ※ 24 September 2019       paper accepted ※ 10 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



TUCPR07
High-level Physics Controls Applications Development for FRIB
828


 

T. Zhang, K. Fukushima, M. Ikegami, D.G. Maxwell, P.N. Ostroumov
                       FRIB, East Lansing, Michigan, USA

 


 

Funding: Work supported by the U.S. Department of Energy Office of Science under Cooperative Agreement DESC0000661
For the accelerators driven by the distributed control system like EPICS, control engineers solve the problem to make the devices work, while accelerator physicists dedicate themselves to make the machine run as the physics predicted. To fill the gap between the physics high-level controls and the low-level device controls, we developed a software framework that can help the users like accelerator physicists and operators, to work well with the machine in an object-oriented way, based on which the implementations for the physics control algorithms could be very efficient, understandable and maintainable.* Meanwhile, the modularized UI widgets are developed to standardize the high-level GUI applications development, to greatly reuse the codebase and ease the development. The most important thing is all the development also apply to other EPICS based accelerators. In this contribution, the design and implementation for both interactive Python scripting controls and high-level GUIs development will be addressed.
*Tong Zhang, "Physics high-level applications and toolkit for accelerator system", EPICS Collaboration Meeting, Jun. 2018, ANL, US

 






Slides TUCPR07 [8.430 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2019-TUCPR07

 


About •
paper received ※ 30 September 2019       paper accepted ※ 09 October 2019        issue date ※ 30 August 2020
 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 




