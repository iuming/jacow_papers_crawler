













ICALEPCS2017 - Table of Session: THBPL (Software Technology Evolution 3)


THBPL —  Software Technology Evolution 3   (12-Oct-17   11:15—12:45)
Chair: G. Chiozzi, ESO, Garching bei Muenchen, Germany


Paper
Title
Page



THBPL01
C2MON SCADA Deployment on CERN Cloud Infrastructure
1103


 

B. Copy, M. Bräger, F. Ehm, A. Lossent, E. Mandilara
                       CERN, Geneva, Switzerland

 


 

The CERN Control and Monitoring Platform (C2MON) is an open-source platform for industrial controls data acquisition, monitoring, control and data publishing. C2MON's high-availability, redundant capabilities make it particularly suited for a large, geographically scattered context such as CERN. The C2MON platform relies on the Java technology stack at all levels of its architecture. Since end of 2016, CERN offers a platform as a service (PaaS) solution based on RedHat Openshift. Initially envisioned at CERN for web application hosting, Openshift can be leveraged to host any software stack due to its adoption of the Docker container technology. In order to make C2MON more scalable and compatible with Cloud Computing, it was necessary to containerize C2MON components for the Docker container platform. Containerization is a logical process that forces one to rethink a distributed architecture in terms of decoupled micro-services suitable for a cloud environment. This paper explains the challenges met and the principles behind containerizing a server-centric Java application, demonstrating how simple it has now become to deploy C2MON in any cloud-centric environment.
 

 






Talk as video stream: https://youtu.be/4NbM1yDO_TM
        
 






Slides THBPL01 [3.176 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2017-THBPL01

 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



THBPL02
Behavioural Models for Device Control
1109


 

L. Andolfato, M. Comin, S. Feyrin, M. Kiekebusch, J. Knudstrup, F. Pellegrin, D. Popovic, C. Rosenquist, R. Schmutzer
                       ESO, Garching bei Muenchen, Germany

 


 

ESO is in the process of designing a new instrument control application framework for the ELT project. During this process, we have used the experience in HW control gained from the first and second generation of VLT instruments that have been in operation for almost 20 years. The preliminary outcome of this analysis is a library of Statecharts models illustrating the behaviour of some of the most commonly used devices in telescope and instrument control systems. This paper describes the architectural aspects taken into consideration when designing the models such as HW/SW state representation, common/specialized behaviour, and failure management. An extension to Harel's formalism to facilitate reusability by dynamic creation of orthogonal regions is also proposed. The paper details the behaviour of some devices like shutters, lamps and motors together with the rationale behind the modelling choices. A mapping of the models to a concrete implementation using real HW components is suggested. Although these models have been designed following the principles of our conceptual architecture, they are still generic and platform independent, so they can be easily reused in other projects.

 






Talk as video stream: https://youtu.be/aJr6SkBmsuY
        
 






Slides THBPL02 [1.520 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2017-THBPL02

 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



THBPL03
A New ACS Bulk Data Transfer Service for CTA
1116


 

M.A. Araya, R.S. Castillo, M.I. Jara, L. Pizarro, H.H. von Brand
                       UTFSM, Valparaíso, Chile
E. Lyard
                       University of Geneva, Geneva, Switzerland
I. Oya
                       DESY Zeuthen, Zeuthen, Germany
I. Oya
                       Humboldt University Berlin, Institut für Physik, Berlin, Germany

 


 

Funding: Centro Científico Tecnológico de Valparaíso (CONICYT FB-0821)
The ALMA Common Software (ACS) framework provides Bulk Data Transfer (BDT) service implementations that need to be updated for new projects that will use ACS, such as the Cherenkov Telescope Array (CTA) and other projects, with most cases having quite different requirements than ALMA. We propose a new open-source BDT service for ACS based on ZeroMQ, that meets CTA data transfer specifications while maintaining retro-compatibility with the closed-source solution used in ALMA. The service uses the push-pull pattern for data transfer, the publisher-subscriber pattern for data control, and Protocol Buffers for data serialization, having also the option to integrate other serialization options easily. Besides complying with ACS interface definition to be used by ACS components and clients, the service provide an independent API to be used outside the ACS framework. Our experiments show a good compromise between throughput and computational effort, suggesting that the service could scale up in terms of number of producers, number of consumers and network bandwidth.

 






Talk as video stream: https://youtu.be/F0jOkHOz0uw
        
 






Slides THBPL03 [7.087 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2017-THBPL03

 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



THBPL04
The Design of Tango Based Centralized Management Platform for Software Devices
1121


 

Z. Ni, J. Liu, J. Luo, X. Zhou
                       CAEP, Sichuan, People's Republic of China

 


 

Tango provides the Tango device server object model(TDSOM), whose basic idea is to treat each device as an object. The TDSOM can be divided into 4 basic elements, including the device, the server, the database and the application programmers interface. On the basis of the TDSOM, we design a centralized platform for software device management, named VisualDM, providing standard servers and client management software. Thus the functionality of VisualDM are mutli-folds: 1) dynamically defining or configuring the composition of a device container at run-time; 2) visualization of remote device management based on system scheduling model; 3) remote deployment and update of software devices; 4) registering, logouting, starting and stopping devices. In this paper, platform compositions, module functionalities, the design concepts are discussed. The platform is applied in computer integrated control systems of SG facilities.

 






Talk as video stream: https://youtu.be/5RveBXleczw
        
 






Slides THBPL04 [1.509 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2017-THBPL04

 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



THBPL05
The ELT Linux Development Environment
1125


 

F. Pellegrin, C. Rosenquist
                       ESO, Garching bei Muenchen, Germany

 


 

The Extremely Large Telescope is a 39-metre ground-based telescope being built by ESO. It will be the largest optical/near-infrared telescope in the world and first light is foreseen for 2024. The overall ELT Linux development environment will be presented with an in-depth presentation of its core, the waf build system, and the customizations that ESO is currently developing. The ELT software development for telescopes and instruments poses many challenges to cover the different needs of such a complex system:a variety of technologies, Java, C/C++ and Python as programming languages, Qt5 as the GUI toolkit, communication frameworks such as OPCUA, DDS and ZeroMQ, the interaction with entities such as PLCs and real-time hardware, and users, in-house and not, looking at new usage patterns. All this optimized to be on time for the first light. To meet these requirements, a set of tools was selected. Its content ranges from an IDE, to compilers, interpreters, analysis and debugging tools for the various languages and operations. At the heart of the toolkit lies the modern build framework waf:a versatile tool written in Python selected due to its multiple language support and high performance.

 






Talk as video stream: https://youtu.be/Wk3efalQnY4
        
 






Slides THBPL05 [0.504 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2017-THBPL05

 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 



THBPL06
High Performance RDMA-Based Daq Platform Over PCIe Routable Network
1131


 

W. Mansour, P. Fajardo, N. Janvier
                       ESRF, Grenoble, France

 


 

Funding: Wassim Mansour acknowledges support from the EUCALL project which has received funding from the European Union's H2020 research and innovation programme under grant agreement No 654220.
The ESRF initiated few years ago the development of a novel platform for optimised transfer of 2D detector data based on zero-copy Remote Direct Memory Access techniques. The purpose of this new scheme, under the name of RASHPA, is to efficiently dispatch with no CPU intervention multiple parallel multi-GByte/s data streams produced by modular detectors directly from the detector head to computer clusters for data storage, visualisation and distributed data treatment. The RASHPA platform is designed to be implementable using any data link and transfer protocol that supports RDMA write operations and that can trigger asynchronous events. This paper presents the ongoing work for the first implementation of RASHPA in a real system using the hardware platform of the Medipix3 based SMARTPIX hybrid pixel detector developed at ESRF and relying on switched PCIe over cable network for data transfer. It details the implementation of the RASPHA controller at the detector side and provides input on the software for the management of the overall data acquisition system at the receiver side. The implementation and use of a PCIe switch built with components off-the-shelf is also discussed.

 






Talk as video stream: https://youtu.be/dJDtekXejfg
        
 






Slides THBPL06 [3.835 MB]
        
 


DOI •
reference for this paper 
              ※ https://doi.org/10.18429/JACoW-ICALEPCS2017-THBPL06

 


Export •
reference for this paper using 
              ※ BibTeX, 
              ※ LaTeX, 
              ※ Text/Word, 
              ※ RIS, 
              ※ EndNote (xml)

 


 




